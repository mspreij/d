Not actually documentation, just a todo/random ideas list..

Things to add:
* jq
- bat install instructions o.o;
- more grep
- wget/curl
- git o.o;
- cut? this needs to be a chapter thing in bash or ... w/e
- apt, probably
- atop
- yum
- configure/make stuff, check old C notes & kilo editor
- shopt???
* tmux

Random ideas:
 - placeholder for comment color, to finish different-color strings inside comments.
   > how about simply "\e[0m" but only in comment lines! this would need to go Before the sed that colors
     the comment lines, so # lines still end with "\e[0m"
     https://stackoverflow.com/questions/48772986/sed-replace-a-string-in-a-text-only-if-enclosed-within-quotes
     So: "# foo <esc color>bar\e[0m bazz"             becomes
         "# foo <esc color>bar<comment color> bazz"   becomes
         "<comment color># foo <esc color>bar<comment color> bazz\e[0m"
 ? -l to list entries with last-modified date, and/or commit message
 - d now supresses color when outputting to other process; add a flag to force color output?
 - `d foo :bar` to get only chapter bar from foo (what in the frick is 'chapter notation')
 - could even fetch and store data from some server. or local database. not sure what the advantage of this is, or if there is one..

Done/discarded:
 √ some type of apropos, "d -s blaat" where it simply greps for blaat in all doc files and prints a pretty result table
 √ config? things? somewhere in $D_DOCS
   √ color to use for comments
 x first line '#d ...' can be flags on how to print the rest of the file, eg
   x interpret ansi escape codes (like color)
   x attempt syntax highlighting (maybe use bat if available?)
   x there should then also be some sane - optionally configurable - defaults
   > No.
 v bash_completion
 v maybe add color support for emphasis or the commands in a description
   x example entry using this
 x similarly, wildcard matching or suggestions; "d var" would load vars.txt, while
   "d foo" would be like "do you want foobazz, or foobar?" bash has dialog things for that
   you could abuse to let the user simply type a number? or it reads and handles input itself.
   > bash_completion handles this.
